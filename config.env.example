# VM Blender Automation Configuration File
# Copy this file to config.env and fill in your details

# VM Connection Details
VM_HOST="your-vm-ip-or-hostname"
VM_USER="root"
VM_PORT="22"     # SSH port (default: 22)
VM_KEY=""  # Optional: path to SSH private key file (leave empty for password auth)

# Local Directories
LOCAL_INPUT_DIR="./input"     # Directory containing files to upload
LOCAL_OUTPUT_DIR="./output"   # Directory to download rendered files

# Remote Settings
REMOTE_WORK_DIR="/tmp/blender_work"

# Blender Installation Method
# Options: "snap", "official", "skip"
# - snap: Install via snap (quick but may have GPU issues)
# - official: Download official build from blender.org (best for GPU)
# - skip: Don't install, assume Blender is already installed
# Blender Installation
# Use "snap" because system Blender may have wrong version
# Snap will be configured with GPU access plugs (cuda-control, nvidia-driver-support)
BLENDER_INSTALL_METHOD="snap"


# Blender Settings
BLENDER_FILE=""          # Optional: specific .blend file to render
BLENDER_SCRIPT=""        # Optional: Python script to run in Blender
OUTPUT_FORMAT="PNG"      # Output format: PNG, JPEG, EXR, etc.
FRAME_START=1           # Start frame for animation
FRAME_END=1             # End frame for animation

# GPU Rendering Settings
USE_GPU_RENDERING=false  # Enable GPU-optimized rendering for NVIDIA GPUs
GPU_COUNT=1             # Number of GPUs to use for rendering
REQUIRE_SUDO=false      # Set to true if GPU configuration requires sudo access

# Cleanup Settings
CLEANUP_REMOTE=true     # Clean up remote files after completion

# Example configurations:
# For single image render:
# BLENDER_FILE="scene.blend"
# FRAME_START=1
# FRAME_END=1

# For animation render:
# BLENDER_FILE="animation.blend"
# FRAME_START=1
# FRAME_END=250

# For script-based rendering:
# BLENDER_SCRIPT="render_script.py"
# FRAME_START=1
# FRAME_END=100